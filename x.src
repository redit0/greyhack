if params.len < 2 or params[0] == "-h" or params[0] == "--help" then
	exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address] [isRouter] [targetLocalAddress (optional)]</b>")
end if

if not is_valid_ip(params[0]) then exit("Invalid ip address")
if params.len == 3 and not is_valid_ip(params[2]) then exit("Invalid targetLocalAddress.")
if not get_shell.host_computer.is_network_active then exit("No internet access.")

metaxploit = include_lib(current_path + "/metaxploit.so")
if not metaxploit then
	metaxploit = include_lib("/lib/metaxploit.so")
end if
if not metaxploit then exit("Error: Missing metaxploit")

crypto = include_lib(current_path + "/crypto.so")
if not crypto then
	crypto = include_lib("/lib/crypto.so")
end if
if not crypto then exit("Error: Missing crypto")

get_custom_object.messages = ""

import_code("/root/src/funcs.src")

ipAddress = params[0]
router = "false"

if params[1] == "true" or params[1] == "1" or params[1] == "y" then router = "true"

targetLocalAddress = null

if params.len == 3 then targetLocalAddress = params[2]

isLanIp = is_lan_ip(ipAddress)

ports = getPorts(ipAddress, router)

remoteVulns = null

if targetLocalAddress then
	remoteVulns = getRemoteVulns(ipAddress, ports, router, targetLocalAddress)
else
	remoteVulns = getRemoteVulns(ipAddress, ports, router)
end if

remoteVulns.sort("sort")

count = 0

for vuln in remoteVulns
	count = count + 1
	vuln["num"] = count
end for

printable = formatList(remoteVulns, "true")
clear_screen
print("------------------------------------------------------------")
print("                     x by redit0 v0.0.1                     ")
print("------------------------------------------------------------")
print
print(get_custom_object.messages)
print(printable)
print

choice = user_input("What would you like to do?\n" +
"1. Get Shell\n" +
"\n> ")

if choice == "1" then
	getShell(remoteVulns, ipAddress, router)
end if
